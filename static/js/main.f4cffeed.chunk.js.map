{"version":3,"sources":["components/Header.js","components/TaskForm.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["Header","className","TaskForm","props","useState","task","setTask","inputEl","useRef","useEffect","current","focus","onSubmit","e","preventDefault","onAdd","id","uuidv4","ref","maxLength","type","name","value","placeholder","onChange","newVvalue","target","TaskItem","isEditAnimated","setIsEditAnimated","isDeleteAnimated","setIsDeleteAnimated","editId","currentItem","onEdit","inputValue","setInputValue","style","border","color","backgroundColor","onClick","setTimeout","onDelete","handleEditChange","icon","faEdit","fixedWidth","faTrashAlt","TaskList","setEdit","text","taskList","setTaskList","addTask","test","prevTask","updateTask","newText","preValue","map","deleteTask","filter","index","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4cffeed.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"heading\">\n      <h1>To-Do List</h1>\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TaskForm = (props) => {\n  const [task, setTask] = useState('');\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    inputEl.current.focus();\n  });\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    setTask(newVvalue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onAdd({\n      task: task, \n      id: uuidv4()\n    });\n    setTask(\"\");\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <input \n          ref={inputEl}\n          className=\"task-input\" \n          maxLength = \"20\"\n          type=\"text\"\n          name=\"item\" \n          value={task} \n          placeholder={\"Add a task ...\"}\n          onChange={handleChange} \n        />\n      <button type=\"submit\" className=\"task-button\">Add</button>\n    </form>\n  );\n};\n\nexport default TaskForm;","import React, { useState, useRef, useEffect } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport 'animate.css/animate.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n\n\nconst TaskItem = (props) => {\n\n  const [isEditAnimated, setIsEditAnimated] = useState(false);\n  const [isDeleteAnimated, setIsDeleteAnimated] = useState(false);\n  const inputEl = useRef(null);\n\n  \n  useEffect(() => {\n    if(props.editId === props.currentItem.id){\n      inputEl.current.focus();\n    }\n  });\n\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    props.setInputValue(newVvalue);\n  };\n\n  const handleEdit = e => {\n    e.preventDefault();\n    props.onEdit(props.currentItem.id, props.inputValue);\n  }\n\n  const del = () => {\n    \n\n    setTimeout( () => {\n      props.onDelete(props.id); \n      setIsDeleteAnimated(false);\n    }, 300);\n\n\n  }\n\n\n  return (\n    <>\n      {\n        props.editId === props.currentItem.id &&\n        <div>\n\n          <form className=\"form edit\" onSubmit={handleEdit}>\n            <input \n                ref={inputEl}\n                className=\"task-input edit\" \n                maxLength = \"20\"   \n                type=\"text\"\n                name=\"item\" \n                value={props.inputValue} \n                placeholder={\"Edit your task ...\"}\n                onChange={handleChange} \n                style={{border:'2px solid #1dd1a1'}}\n            />\n            <button \n              type=\"submit\" \n              className=\"task-button edit\" \n              style={{color: '#333', backgroundColor:'#1dd1a1'}}>\n              Save\n            </button>\n          </form>\n\n        </div>\n      }\n     \n\n      {\n        props.editId !== props.currentItem.id &&\n\n        <div className={ isDeleteAnimated ? 'animate__animated animate__zoomOut' : '' } onClick={() => del()}>\n\n\n          <div className={isEditAnimated ? 'taskItem' : 'taskItem animate__animated animate__zoomIn'} >\n\n              <li>{props.currentItem.task}</li>\n\n            <div className=\"icons\"> \n              <FontAwesomeIcon \n                onClick={() => props.handleEditChange(props.currentItem.id, props.currentItem.task, setIsEditAnimated)} \n                icon={faEdit} \n                fixedWidth  \n              />\n              \n              <FontAwesomeIcon \n                onClick={() => setIsDeleteAnimated(true) } \n                // onClick={() => {setIsDeleteAnimated(true); del()} } \n                icon={faTrashAlt} \n                fixedWidth \n              />\n            </div>\n\n          </div>\n\n        </div>\n\n      }\n    </>\n  );\n};\n\nexport default TaskItem; \n","import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskItem from './TaskItem';\n\nconst TaskList = () => {\n\n  //Save input value in input box\n  const [inputValue, setInputValue] = useState(\"\");\n  \n  // One variable that holds the id , can be erased. If in TaskItem it will create new one for each li and state won't change\n  const [editId, setEdit] = useState(false);\n\n  const handleEditChange = (id, text, setIsEditAnimated) => {\n    setEdit(id);\n    setInputValue(text);\n    setIsEditAnimated(true);\n  };\n\n\n  const [taskList, setTaskList] = useState([]);\n\n  const addTask = task => {\n    if(!task.task || /^\\s*$/.test(task.task)) { //avoid space typing\n      return;\n    }\n    setTaskList( prevTask => {\n      return [...prevTask, task];\n    }); \n  };\n\n\n  const updateTask = (id, newText) => {\n    if(!newText || /^\\s*$/.test(newText)) { //avoid space typing\n      return;\n    }\n    setTaskList(preValue => {\n      return preValue.map( currentItem => { \n        if(currentItem.id === id) {\n          currentItem.task = newText;\n        } \n        return currentItem;\n      })\n    });\n    setEdit(false);\n  };\n\n\n  const deleteTask = (id) => {\n    setTaskList(preValue => {\n      return preValue.filter( (currentItem, index) => {\n        return index !== id;\n      })\n    });  \n  };\n\n\n  return (\n    <div>\n\n      <TaskForm onAdd={addTask} />\n\n      <div>\n        <ul>    \n          {\n            taskList.map((currentItem, index) => (\n              <TaskItem \n                key={index} \n                id={index} \n                onAdd={addTask}\n                onDelete={deleteTask}\n                onEdit={updateTask}\n                currentItem={currentItem} \n\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                handleEditChange={handleEditChange}\n                editId={editId}\n              />\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;","import React from \"react\";\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <TaskList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}