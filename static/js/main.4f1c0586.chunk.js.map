{"version":3,"sources":["components/Header.js","components/TaskForm.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["Header","className","TaskForm","props","useState","edit","text","inputEl","useRef","useEffect","current","focus","TaskItem","setEdit","isDone","onAdd","value","onEdit","id","prevState","onClick","onDelete","TaskList","taskList","setTaskList","updateTask","newText","test","preValue","map","currentItem","index","console","log","deleteTask","filter","task","prevTask","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAUeA,EARA,WACb,OACE,yBAAKC,UAAU,WACb,4C,eCgESC,EAnEE,SAACC,GAAW,IAAD,EACFC,mBAASD,EAAME,KAAOF,EAAMG,KAAO,IADjC,mBAEpBC,GAFoB,UAEVC,iBAAO,OAEvBC,qBAAU,WACRF,EAAQG,QAAQC,Y,kCC6BLC,EA9BE,SAACT,GAAW,IAAD,EACFC,oBAAS,GADP,mBACnBC,EADmB,KACbQ,EADa,OAEET,oBAAS,GAFX,mBAEnBU,EAFmB,UAYxB,OAAGT,EACM,kBAAC,EAAD,CAAUA,KAAMA,EAAMC,KAAMH,EAAMG,KAAMS,MARhC,SAAAC,GACjBb,EAAMc,OAAOd,EAAMe,GAAIF,GACvBH,GAAQ,SAAAM,GACN,OAAQA,QAUV,yBAAKlB,UAAWa,EAAS,gBAAkB,YAEzC,4BAAKX,EAAMG,MAEX,yBAAKL,UAAU,SACb,kBAAC,IAAD,CAAUmB,QAAS,kBAAMP,GAAQ,MACjC,kBAAC,IAAD,CAAYO,QAAS,kBAAMjB,EAAMkB,SAASlB,EAAMe,UC+BzCI,EAzDE,WAAO,IAAD,EACWlB,mBAAS,IADpB,mBACdmB,EADc,KACJC,EADI,KAYfC,EAAa,SAACP,EAAIQ,GAClBA,IAAW,QAAQC,KAAKD,IAG5BF,GAAY,SAAAI,GACV,OAAOA,EAASC,KAAK,SAACC,EAAaC,GAEjC,OADAC,QAAQC,IAAI,MAAOF,IAAUb,EAAKQ,EAAUI,GACpCC,IAAUb,EAAKQ,EAAUI,SAKjCI,EAAa,SAAAhB,GACjBM,GAAY,SAAAI,GACV,OAAOA,EAASO,QAAQ,SAACL,EAAaC,GACpC,OAAOA,IAAUb,SAMvB,OACE,6BAEE,kBAAC,EAAD,CAAUH,MAjCE,SAAAqB,GACVA,IAAQ,QAAQT,KAAKS,IAGzBZ,GAAa,SAAAa,GACX,MAAM,CAAED,GAAR,mBAAiBC,UA8BjB,6BACE,4BAEId,EAASM,KAAI,SAACC,EAAaC,GAAd,OACX,kBAAC,EAAD,CACEO,IAAKP,EACLb,GAAIa,EACJV,SAAUa,EACVjB,OAAQQ,EACRnB,KAAMwB,WCtCPS,MATf,WACE,OACE,yBAAKtC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCHNuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4f1c0586.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"heading\">\n      <h1>To-Do List</h1>\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState, useRef, useEffect } from 'react';\n\nconst TaskForm = (props) => {\n  const [task, setTask] = useState(props.edit ? props.text : '');\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    inputEl.current.focus();\n  });\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    setTask(newVvalue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onAdd(task);\n    setTask(\"\");\n  }\n\n  return (\n    // <form className=\"form\" onSubmit={handleSubmit}>\n    <div>\n    {\n      props.edit ?\n      <form className=\"form edit\" onSubmit={handleSubmit}>\n        <input \n          ref={inputEl}\n          className=\"task-input edit\" \n          maxLength = \"20\"\n          type=\"text\"\n          name=\"item\" \n          value={task} \n          placeholder={\"Edit your task ...\"}\n          onChange={handleChange} \n          style={{border:'2px solid #1dd1a1'}}\n        />\n        <button \n          type=\"submit\" \n          className=\"task-button edit\" \n          style={{color: '#333', backgroundColor:'#1dd1a1'}}>\n          \n          Save\n          \n        </button>\n      </form>\n\n      :\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input \n          ref={inputEl}\n          className=\"task-input\" \n          maxLength = \"20\"\n          type=\"text\"\n          name=\"item\" \n          value={task} \n          placeholder={\"Add a task ...\"}\n          onChange={handleChange} \n        />\n        <button type=\"submit\" className=\"task-button\">Add</button>\n      </form>\n    }\n    \n    </div>\n  );\n};\n\nexport default TaskForm;","import React, { useState, useRef } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TaskForm from './TaskForm';\n\n\nconst TaskItem = (props) => {\n  const [edit, setEdit] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n\n\n  const handleEdit = value => {\n    props.onEdit(props.id, value);\n    setEdit(prevState => {\n      return !prevState;\n    })\n  };\n\n    if(edit){\n      return <TaskForm edit={edit} text={props.text} onAdd={handleEdit} />\n    }\n    \n\n  return (\n    <div className={isDone ? 'taskItem done' : 'taskItem'} >\n\n      <li>{props.text}</li>\n\n      <div className=\"icons\">\n        <EditIcon onClick={() => setEdit(true)} />\n        <DeleteIcon onClick={() => props.onDelete(props.id)} />\n      </div>\n    </div>\n  );\n};\n\nexport default TaskItem; \n\n// const filt = () =>{\n  //   setEdit(true);\n  //   console.log(props.id);\n  //   const res = props.taskList.filter( (currentItem, index) => {\n  //     return index !== props.id\n  //   });\n\n\n  //   console.log(res);\n\n  // }","import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskItem from './TaskItem';\n\nconst TaskList = () => {\n  const [taskList, setTaskList] = useState([]);\n  \n  const addTask = task => {\n    if(!task || /^\\s*$/.test(task)) { //avoid space typing\n      return;\n    }\n    setTaskList( prevTask => {\n      return [task, ...prevTask];\n    }); \n  };\n\n  const updateTask = (id, newText) => {\n    if(!newText || /^\\s*$/.test(newText)) { //avoid space typing\n      return;\n    }\n    setTaskList(preValue => {\n      return preValue.map( (currentItem, index) => { \n        console.log('map', index === id ? newText : currentItem);\n        return (index === id ? newText : currentItem); //return all value string + the one edited - individually\n      })\n    });\n  }\n\n  const deleteTask = id => {\n    setTaskList(preValue => {\n      return preValue.filter( (currentItem, index) => {\n        return index !== id;\n      })\n    });\n  };\n\n\n  return (\n    <div>\n\n      <TaskForm onAdd={addTask} />\n\n      <div>\n        <ul>        \n          {\n            taskList.map((currentItem, index) => (\n              <TaskItem \n                key={index} \n                id={index} \n                onDelete={deleteTask}\n                onEdit={updateTask}\n                text={currentItem} \n              />\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;","import React from \"react\";\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <TaskList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}