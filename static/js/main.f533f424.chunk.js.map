{"version":3,"sources":["components/Header.js","components/TaskForm.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["Header","className","TaskForm","onAdd","useState","task","setTask","inputEl","useRef","useEffect","current","focus","onSubmit","e","preventDefault","id","uuidv4","completed","ref","maxLength","type","name","value","placeholder","onChange","newVvalue","target","TaskItem","onDelete","editId","currentItem","onEdit","inputValue","setInputValue","handleEditChange","completedTask","isEditAnimated","setIsEditAnimated","style","border","color","backgroundColor","onClick","TaskList","taskList","setTaskList","setEdit","text","addTask","test","prevTask","updateTask","newText","prevValue","map","deleteTask","filter","index","completeTask","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f533f424.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"heading\">\n      <h1>To-Do List</h1>\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TaskForm = ({onAdd}) => {\n  const [task, setTask] = useState('');\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    inputEl.current.focus();\n  });\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    setTask(newVvalue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAdd({\n      task: task, \n      id: uuidv4(),\n      completed: false\n    });\n    setTask(\"\");\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <input \n          ref={inputEl}\n          className=\"task-input\" \n          maxLength = \"30\"\n          type=\"text\"\n          name=\"item\" \n          value={task} \n          placeholder={\"Add a task ...\"}\n          onChange={handleChange} \n        />\n      <button type=\"submit\" className=\"task-button\">Add</button>\n    </form>\n  );\n};\n\nexport default TaskForm;","import React, { useState, useRef, useEffect } from 'react';\nimport 'animate.css/animate.css';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst TaskItem = ({id, \n                  onDelete, \n                  editId, \n                  currentItem, \n                  onEdit, \n                  inputValue, \n                  setInputValue, \n                  handleEditChange,\n                  completed,\n                  completedTask \n                 }) => {\n\n  const [isEditAnimated, setIsEditAnimated] = useState(false);\n  const inputEl = useRef(null);\n\n  \n  useEffect(() => {\n    if(editId === currentItem.id){\n      inputEl.current.focus();\n    }\n  });\n\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    setInputValue(newVvalue);\n  };\n\n\n  const handleEdit = e => {\n    e.preventDefault();\n    onEdit(currentItem.id, inputValue);\n  }\n\n\n  return (\n    <>\n      {\n        editId === currentItem.id &&\n        <div>\n\n          <form className=\"form edit\" onSubmit={handleEdit}>\n            <input \n                ref={inputEl}\n                className=\"task-input edit\" \n                maxLength = \"30\"   \n                type=\"text\"\n                name=\"item\" \n                value={inputValue} \n                placeholder={\"Edit your task ...\"}\n                onChange={handleChange} \n                style={{border:'2px solid #1dd1a1'}}\n            />\n            <button \n              type=\"submit\" \n              className=\"task-button edit\" \n              style={{color: '#333', backgroundColor:'#1dd1a1'}}>\n              Save\n            </button>\n          </form>\n\n        </div>\n      }\n     \n\n      {\n        editId !== currentItem.id &&\n\n          <div className={isEditAnimated ? 'taskItem' : 'taskItem animate__animated animate__zoomIn'}>\n\n            <li className={completed ? 'completed' : ''} \n                onClick={() => completedTask(currentItem.id)}>\n                {currentItem.task}\n            </li>\n\n            <div className=\"icons\"> \n              <EditIcon \n                onClick={() => handleEditChange(currentItem.id, currentItem.task, setIsEditAnimated)} \n              />\n              <DeleteForeverIcon \n                onClick={() => onDelete(id)}\n              />\n            </div>\n          </div>\n      }\n    </>\n  );\n};\n\nexport default TaskItem; ","import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskItem from './TaskItem';\n\nconst TaskList = () => {\n  const [taskList, setTaskList] = useState([]);\n\n  //Save input value in input box\n  const [inputValue, setInputValue] = useState(\"\");\n  \n  // One variable that holds the id , can be erased. If in TaskItem it will create new one for each li and state won't change\n  const [editId, setEdit] = useState(false);\n\n\n  const handleEditChange = (id, text, setIsEditAnimated) => {\n    setEdit(id);\n    setInputValue(text);\n    setIsEditAnimated(true);\n  };\n\n\n  const addTask = task => {\n    if(!task.task || /^\\s*$/.test(task.task)) { //avoid space typing\n      return;\n    }\n    setTaskList( prevTask => {\n      return [...prevTask, task];\n    }); \n  };\n\n\n  const updateTask = (id, newText) => {\n    if(!newText || /^\\s*$/.test(newText)) { //avoid space typing\n      return;\n    }\n    setTaskList(prevValue => {\n      return prevValue.map( currentItem => { \n        if(currentItem.id === id) {\n          currentItem.task = newText;\n        } \n        return currentItem;\n      })\n    });\n    setEdit(false);\n  };\n\n\n  const deleteTask = id => {\n    setTaskList(prevValue => {\n      return prevValue.filter( (currentItem, index) => {\n        return index !== id;\n      })\n    });  \n  };\n\n\n  const completeTask = id => {\n    setTaskList(taskList.map( currentItem => { \n        if(currentItem.id === id) {\n          currentItem.completed = !currentItem.completed;\n        } \n        return currentItem;\n    }));\n  };\n\n\n  return (\n    <div>\n\n      <TaskForm onAdd={addTask} \n/>\n\n      <div>\n        <ul>    \n          {\n            taskList.map((currentItem, index) => (\n              <TaskItem \n                key={index} \n                id={index} \n                onAdd={addTask}\n                onDelete={deleteTask}\n                onEdit={updateTask}\n                currentItem={currentItem} \n\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                handleEditChange={handleEditChange}\n                editId={editId}\n\n                completed={currentItem.completed}  \n                completedTask={completeTask}\n              />\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;","import React from \"react\";\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <TaskList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}