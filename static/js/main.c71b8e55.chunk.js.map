{"version":3,"sources":["components/Header.js","components/TaskForm.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["Header","className","TaskForm","props","useState","task","setTask","inputEl","useRef","useEffect","current","focus","onSubmit","e","preventDefault","onAdd","id","uuidv4","ref","maxLength","type","name","value","placeholder","onChange","newVvalue","target","TaskItem","isDone","editId","currentItem","inputValue","setInputValue","style","border","onClick","onEdit","color","backgroundColor","handleEditChange","onDelete","TaskList","setEdit","text","taskList","setTaskList","addTask","test","prevTask","updateTask","newText","preValue","map","console","log","deleteTask","filter","index","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c71b8e55.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"heading\">\n      <h1>To-Do List</h1>\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TaskForm = (props) => {\n  // const [task, setTask] = useState(props.editId ? props.text : '');\n  const [task, setTask] = useState('');\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    inputEl.current.focus();\n  });\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    setTask(newVvalue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // props.onAdd(task);\n    props.onAdd({\n      task: task, \n      id: uuidv4()\n    });\n    setTask(\"\");\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <input \n          ref={inputEl}\n          className=\"task-input\" \n          maxLength = \"20\"\n          type=\"text\"\n          name=\"item\" \n          value={task} \n          placeholder={\"Add a task ...\"}\n          onChange={handleChange} \n        />\n      <button type=\"submit\" className=\"task-button\">Add</button>\n    </form>\n\n\n    /* {\n      props.editId ?\n\n      <>\n        <input \n          ref={inputEl}\n          className=\"task-input edit\" \n          maxLength = \"20\"\n          type=\"text\"\n          name=\"item\" \n          value={task} \n          placeholder={\"Edit your task ...\"}\n          onChange={handleChange} \n          style={{border:'2px solid #1dd1a1'}}\n        />\n        <button \n          type=\"submit\" \n          className=\"task-button edit\" \n          style={{color: '#333', backgroundColor:'#1dd1a1'}}>\n          \n          Save\n          \n        </button>\n      </>\n      :\n      <>\n        <input \n          ref={inputEl}\n          className=\"task-input\" \n          maxLength = \"20\"\n          type=\"text\"\n          name=\"item\" \n          value={task} \n          placeholder={\"Add a task ...\"}\n          onChange={handleChange} \n        />\n        <button type=\"submit\" className=\"task-button\">Add</button>\n      </>\n    } */\n  );\n};\n\nexport default TaskForm;","import React, { useState, useRef, useEffect } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\n\nconst TaskItem = (props) => {\n\n  const [isDone, setIsDone] = useState(false);\n  const inputEl = useRef(null);\n  \n  useEffect(() => {\n    if(props.editId === props.currentItem.id){\n      inputEl.current.focus();\n    }\n  });\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    props.setInputValue(newVvalue);\n  };\n\n\n  // const handleEdit = e => {\n  //   e.preventDefault();\n  //   props.onEdit(props.currentItem.id, inputValue)    \n\n\n  //   setSaveEdit(prevState => {\n  //     return !prevState;\n  //   })\n  // };\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n    \n  //   props.onEdit(props.currentItem.id, props.inputValue);\n  //   // props.onAdd({\n  //   //   task: props.inputValue, \n  //   //   // id: props.currentItem.id\n  //   // });\n  // }\n\n  return (\n    <div className={isDone ? 'taskItem done' : 'taskItem'} >\n\n      {\n        props.editId === props.currentItem.id &&\n\n          <form className=\"form\">\n            <input \n                ref={inputEl}\n                className=\"task-input edit\" \n                maxLength = \"20\"   \n                type=\"text\"\n                name=\"item\" \n                value={props.inputValue} \n                placeholder={\"Edit your task ...\"}\n                onChange={handleChange} \n                style={{border:'2px solid #1dd1a1'}}\n            />\n            <button onClick={ () => props.onEdit(props.currentItem.id, props.inputValue) }\n              type=\"submit\" \n              className=\"task-button edit\" \n              style={{color: '#333', backgroundColor:'#1dd1a1'}}>\n              Save\n            </button>\n          </form>\n      }\n\n      {\n        props.editId !== props.currentItem.id &&\n\n      <>\n        <li>{props.currentItem.task}</li>\n\n        <div className=\"icons\">\n          <EditIcon onClick={() => props.handleEditChange(props.currentItem.id, props.currentItem.task)} />\n          <DeleteIcon onClick={() => props.onDelete(props.id)} />\n        </div>\n        </>\n      }\n        \n      \n    </div> \n  );\n};\n\nexport default TaskItem; \n","import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskItem from './TaskItem';\n\nconst TaskList = () => {\n\n  //Save input value in input box\n  const [inputValue, setInputValue] = useState(\"\");\n  \n  // One variable that holds the id , can be erased. If in TaskItem it will create new one for each li and state won't change\n  const [editId, setEdit] = useState(false);\n\n  const handleEditChange = (id, text) => {\n    setEdit(id);\n    setInputValue(text);\n  };\n\n  const [taskList, setTaskList] = useState([]);\n\n  const addTask = task => {\n    if(!task || /^\\s*$/.test(task)) { //avoid space typing\n      return;\n    }\n    setTaskList( prevTask => {\n      return [task, ...prevTask];\n    }); \n  };\n\n  // const updateTask = (id, newText) => {\n  //   if(!newText || /^\\s*$/.test(newText)) { //avoid space typing\n  //     return;\n  //   }\n  //   setTaskList(preValue => {\n  //     return preValue.map( (currentItem, index) => { \n  //       console.log('map', index === id ? newText : currentItem);\n  //       return (index === id ? newText : currentItem); //return the one edited \n  //     })\n  //   });\n  // }\n\n  const updateTask = (id, newText) => {\n    if(!newText || /^\\s*$/.test(newText)) { //avoid space typing\n      return;\n    }\n    setTaskList(preValue => {\n      return preValue.map( currentItem => { \n        console.log('map', currentItem.id === id ? newText : currentItem);\n        if(currentItem.id === id) {\n          currentItem.task = newText;\n        } \n        return currentItem\n      })\n    });\n    setEdit(false);\n  }\n\n\n  const deleteTask = id => {\n    setTaskList(preValue => {\n      return preValue.filter( (currentItem, index) => {\n        return index !== id;\n      })\n    });\n  };\n\nconsole.log(taskList);\n  return (\n    <div>\n\n      <TaskForm onAdd={addTask} />\n\n      <div>\n        <ul>        \n          {\n            taskList.map((currentItem, index) => (\n              <TaskItem \n                key={index} \n                id={index} \n                onAdd={addTask}\n                onDelete={deleteTask}\n                onEdit={updateTask}\n                currentItem={currentItem} \n\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                handleEditChange={handleEditChange}\n                editId={editId}\n              />\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;","import React from \"react\";\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <TaskList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}