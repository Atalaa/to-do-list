{"version":3,"sources":["components/Header.js","components/TaskForm.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["Header","className","TaskForm","onAdd","useState","task","setTask","inputEl","useRef","useEffect","current","focus","onSubmit","e","preventDefault","id","uuidv4","ref","maxLength","type","name","value","placeholder","onChange","newVvalue","target","TaskItem","onDelete","editId","currentItem","onEdit","inputValue","setInputValue","handleEditChange","taskDone","isEditAnimated","setIsEditAnimated","style","border","color","backgroundColor","onClick","TaskList","taskList","setTaskList","setEdit","text","addTask","test","prevTask","updateTask","newText","preValue","map","deleteTask","filter","index","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.783f7122.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"heading\">\n      <h1>To-Do List</h1>\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TaskForm = ({onAdd}) => {\n  const [task, setTask] = useState('');\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    inputEl.current.focus();\n  });\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    setTask(newVvalue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAdd({\n      task: task, \n      id: uuidv4()\n    });\n    setTask(\"\");\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <input \n          ref={inputEl}\n          className=\"task-input\" \n          maxLength = \"30\"\n          type=\"text\"\n          name=\"item\" \n          value={task} \n          placeholder={\"Add a task ...\"}\n          onChange={handleChange} \n        />\n      <button type=\"submit\" className=\"task-button\">Add</button>\n    </form>\n  );\n};\n\nexport default TaskForm;","import React, { useState, useRef, useEffect } from 'react';\nimport 'animate.css/animate.css';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst TaskItem = ({id, \n                  onDelete, \n                  editId, \n                  currentItem, \n                  onEdit, \n                  inputValue, \n                  setInputValue, \n                  handleEditChange, \n                  taskDone }) => {\n\n  const [isEditAnimated, setIsEditAnimated] = useState(false);\n  const inputEl = useRef(null);\n\n  \n  useEffect(() => {\n    if(editId === currentItem.id){\n      inputEl.current.focus();\n    }\n  });\n\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    setInputValue(newVvalue);\n  };\n\n\n  const handleEdit = e => {\n    e.preventDefault();\n    onEdit(currentItem.id, inputValue);\n  }\n\n\n\n\n  return (\n    <>\n      {\n        editId === currentItem.id &&\n        <div>\n\n          <form className=\"form edit\" onSubmit={handleEdit}>\n            <input \n                ref={inputEl}\n                className=\"task-input edit\" \n                maxLength = \"30\"   \n                type=\"text\"\n                name=\"item\" \n                value={inputValue} \n                placeholder={\"Edit your task ...\"}\n                onChange={handleChange} \n                style={{border:'2px solid #1dd1a1'}}\n            />\n            <button \n              type=\"submit\" \n              className=\"task-button edit\" \n              style={{color: '#333', backgroundColor:'#1dd1a1'}}>\n              Save\n            </button>\n          </form>\n\n        </div>\n      }\n     \n\n      {\n        editId !== currentItem.id &&\n\n          <div className={isEditAnimated ? 'taskItem' : 'taskItem animate__animated animate__zoomIn'} >\n\n            <li>{currentItem.task}</li>\n            <div className=\"icons\"> \n              <EditIcon \n                onClick={() => handleEditChange(currentItem.id, currentItem.task, setIsEditAnimated)} \n              />\n\n              <DeleteForeverIcon \n                onClick={() => onDelete(id)}\n              />\n            </div>\n          </div>\n      }\n    </>\n  );\n};\n\nexport default TaskItem; ","import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskItem from './TaskItem';\n\nconst TaskList = () => {\n  const [taskList, setTaskList] = useState([]);\n\n  //Save input value in input box\n  const [inputValue, setInputValue] = useState(\"\");\n  \n  // One variable that holds the id , can be erased. If in TaskItem it will create new one for each li and state won't change\n  const [editId, setEdit] = useState(false);\n\n\n  const handleEditChange = (id, text, setIsEditAnimated) => {\n    setEdit(id);\n    setInputValue(text);\n    setIsEditAnimated(true);\n  };\n\n\n  const addTask = task => {\n    if(!task.task || /^\\s*$/.test(task.task)) { //avoid space typing\n      return;\n    }\n    setTaskList( prevTask => {\n      return [...prevTask, task];\n    }); \n  };\n\n\n  const updateTask = (id, newText) => {\n    if(!newText || /^\\s*$/.test(newText)) { //avoid space typing\n      return;\n    }\n    setTaskList(preValue => {\n      return preValue.map( currentItem => { \n        if(currentItem.id === id) {\n          currentItem.task = newText;\n        } \n        return currentItem;\n      })\n    });\n    setEdit(false);\n  };\n\n\n  const deleteTask = (id) => {\n    setTaskList(preValue => {\n      return preValue.filter( (currentItem, index) => {\n        return index !== id;\n      })\n    });  \n  };\n\n\n  // const taskDone = id => {\n  //   let doneList = taskList.map( (item , index) => {\n\n  //   });\n  // }\n\n\n  return (\n    <div>\n\n      <TaskForm onAdd={addTask} />\n\n      <div>\n        <ul>    \n          {\n            taskList.map((currentItem, index) => (\n              <TaskItem \n                key={index} \n                id={index} \n                onAdd={addTask}\n                onDelete={deleteTask}\n                onEdit={updateTask}\n                currentItem={currentItem} \n                // taskDone={taskDone}\n\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                handleEditChange={handleEditChange}\n                editId={editId}\n              />\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;","import React from \"react\";\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <TaskList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}