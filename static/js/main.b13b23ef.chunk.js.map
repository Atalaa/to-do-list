{"version":3,"sources":["components/Header.js","components/TaskForm.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["Header","className","TaskForm","props","useState","task","setTask","inputEl","useRef","useEffect","current","focus","onSubmit","e","preventDefault","onAdd","id","uuidv4","ref","maxLength","type","name","value","placeholder","onChange","newVvalue","target","TaskItem","onDelete","editId","currentItem","onEdit","inputValue","setInputValue","handleEditChange","isEditAnimated","setIsEditAnimated","style","border","color","backgroundColor","onClick","TaskList","setEdit","text","taskList","setTaskList","addTask","test","prevTask","updateTask","newText","preValue","map","deleteTask","filter","index","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b13b23ef.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"heading\">\n      <h1>To-Do List</h1>\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TaskForm = (props) => {\n  const [task, setTask] = useState('');\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    inputEl.current.focus();\n  });\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    setTask(newVvalue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onAdd({\n      task: task, \n      id: uuidv4()\n    });\n    setTask(\"\");\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <input \n          ref={inputEl}\n          className=\"task-input\" \n          maxLength = \"20\"\n          type=\"text\"\n          name=\"item\" \n          value={task} \n          placeholder={\"Add a task ...\"}\n          onChange={handleChange} \n        />\n      <button type=\"submit\" className=\"task-button\">Add</button>\n    </form>\n  );\n};\n\nexport default TaskForm;","import React, { useState, useRef, useEffect } from 'react';\nimport 'animate.css/animate.css';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst TaskItem = ({id, onDelete, editId, currentItem, onEdit, inputValue, setInputValue, handleEditChange }) => {\n\n  const [isEditAnimated, setIsEditAnimated] = useState(false);\n  const inputEl = useRef(null);\n\n  \n  useEffect(() => {\n    if(editId === currentItem.id){\n      inputEl.current.focus();\n    }\n  });\n\n\n  const handleChange = e => {\n    const newVvalue = e.target.value;\n    setInputValue(newVvalue);\n  };\n\n\n  const handleEdit = e => {\n    e.preventDefault();\n    onEdit(currentItem.id, inputValue);\n  }\n\n\n\n\n  return (\n    <>\n      {\n        editId === currentItem.id &&\n        <div>\n\n          <form className=\"form edit\" onSubmit={handleEdit}>\n            <input \n                ref={inputEl}\n                className=\"task-input edit\" \n                maxLength = \"20\"   \n                type=\"text\"\n                name=\"item\" \n                value={inputValue} \n                placeholder={\"Edit your task ...\"}\n                onChange={handleChange} \n                style={{border:'2px solid #1dd1a1'}}\n            />\n            <button \n              type=\"submit\" \n              className=\"task-button edit\" \n              style={{color: '#333', backgroundColor:'#1dd1a1'}}>\n              Save\n            </button>\n          </form>\n\n        </div>\n      }\n     \n\n      {\n        editId !== currentItem.id &&\n\n          <div className={isEditAnimated ? 'taskItem' : 'taskItem animate__animated animate__zoomIn'} >\n\n            <li>{currentItem.task}</li>\n            <div className=\"icons\"> \n              <EditIcon \n                onClick={() => handleEditChange(currentItem.id, currentItem.task, setIsEditAnimated)} \n              />\n\n              <DeleteForeverIcon \n                onClick={() => onDelete(id)}\n              />\n            </div>\n          </div>\n      }\n    </>\n  );\n};\n\nexport default TaskItem; ","import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskItem from './TaskItem';\n\nconst TaskList = () => {\n\n  //Save input value in input box\n  const [inputValue, setInputValue] = useState(\"\");\n  \n  // One variable that holds the id , can be erased. If in TaskItem it will create new one for each li and state won't change\n  const [editId, setEdit] = useState(false);\n\n  const handleEditChange = (id, text, setIsEditAnimated) => {\n    setEdit(id);\n    setInputValue(text);\n    setIsEditAnimated(true);\n  };\n\n\n  const [taskList, setTaskList] = useState([]);\n\n  const addTask = task => {\n    if(!task.task || /^\\s*$/.test(task.task)) { //avoid space typing\n      return;\n    }\n    setTaskList( prevTask => {\n      return [...prevTask, task];\n    }); \n  };\n\n\n  const updateTask = (id, newText) => {\n    if(!newText || /^\\s*$/.test(newText)) { //avoid space typing\n      return;\n    }\n    setTaskList(preValue => {\n      return preValue.map( currentItem => { \n        if(currentItem.id === id) {\n          currentItem.task = newText;\n        } \n        return currentItem;\n      })\n    });\n    setEdit(false);\n  };\n\n\n  const deleteTask = (id) => {\n    setTaskList(preValue => {\n      return preValue.filter( (currentItem, index) => {\n        return index !== id;\n      })\n    });  \n  };\n\n\n  return (\n    <div>\n\n      <TaskForm onAdd={addTask} />\n\n      <div>\n        <ul>    \n          {\n            taskList.map((currentItem, index) => (\n              <TaskItem \n                key={index} \n                id={index} \n                onAdd={addTask}\n                onDelete={deleteTask}\n                onEdit={updateTask}\n                currentItem={currentItem} \n\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                handleEditChange={handleEditChange}\n                editId={editId}\n              />\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;","import React from \"react\";\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <TaskList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}